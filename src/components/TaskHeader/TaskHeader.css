/* TaskHeader Component Styles with Light/Dark Mode Support */

.task-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 1.5rem;
  width: 100%;
  max-width: 1200px;
  margin: 0 auto 2rem auto;
  padding: 0.75rem 1.5rem;
  background: linear-gradient(135deg, var(--bg-card) 0%, var(--bg-secondary) 100%);
  border: 1px solid var(--border-primary);
  border-radius: 16px;
  box-shadow: var(--shadow-lg);
  position: relative;
  overflow: hidden;
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  transition: all var(--transition-normal);
}

/* Subtle pattern overlay */
.task-header::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: radial-gradient(circle at 20% 80%, rgba(59, 130, 246, 0.03) 0%, transparent 50%),
    radial-gradient(circle at 80% 20%, rgba(139, 92, 246, 0.03) 0%, transparent 50%);
  pointer-events: none;
  opacity: 0.5;
}

/* Animated top border */
.task-header::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 3px;
  background: linear-gradient(90deg, var(--primary), var(--secondary), var(--tertiary));
  background-size: 200% 100%;
  animation: gradientFlow 6s ease-in-out infinite;
}

@keyframes gradientFlow {
  0%,
  100% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
}

/* Filter section */
.task-header-filter {
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

.task-header-filter-label {
  font-size: 0.875rem;
  font-weight: 500;
  color: var(--text-secondary);
  white-space: nowrap;
}

/* Add task section */
.task-header-add {
  flex: 1;
  max-width: 600px;
  position: relative;
  z-index: 1;
}

.task-header-add-label {
  font-size: 0.875rem;
  font-weight: 600;
  color: var(--text-secondary);
  text-transform: uppercase;
  letter-spacing: 0.05em;
  margin-bottom: 0.75rem;
  display: block;
}

/* Dark mode adjustments */
.dark .task-header {
  background: linear-gradient(135deg, var(--bg-card) 0%, var(--bg-tertiary) 100%);
  border-color: var(--border-primary);
}

.dark .task-header::before {
  background-image: radial-gradient(circle at 20% 80%, rgba(96, 165, 250, 0.05) 0%, transparent 50%),
    radial-gradient(circle at 80% 20%, rgba(167, 139, 250, 0.05) 0%, transparent 50%);
}

/* Hover effects */
.task-header:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-xl);
  border-color: var(--border-secondary);
}

/* Responsive design */
@media (max-width: 1024px) {
  .task-header {
    max-width: 100%;
    padding: 1.25rem 1.5rem;
    gap: 1.5rem;
  }
}

@media (max-width: 768px) {
  .task-header {
    flex-direction: column;
    align-items: stretch;
    gap: 1.5rem;
    padding: 1.25rem;
    margin-bottom: 1.5rem;
    top: 70px; /* Adjust for mobile header height */
  }

  .task-header-filter {
    gap: 0.5rem;
    justify-content: space-between;
    width: 100%;
  }

  .task-header-filter-label {
    font-size: 0.8125rem;
  }

  .task-header-add {
    max-width: none;
  }
}

@media (max-width: 480px) {
  .task-header {
    flex-direction: column;
    align-items: stretch;
    gap: 0.75rem;
    padding: 0.75rem;
    position: relative;
    top: auto;
  }

  .task-header-filter {
    justify-content: space-between;
    width: 100%;
  }

  .task-header-add {
    width: 100%;
  }

  .task-header-filter-label,
  .task-header-add-label {
    margin-bottom: 0.5rem;
  }
}

/* Focus within container */
.task-header:focus-within {
  border-color: var(--primary);
  box-shadow: var(--shadow-xl), 0 0 0 3px rgba(59, 130, 246, 0.1);
}

/* High contrast mode */
@media (prefers-contrast: high) {
  .task-header {
    border-width: 2px;
    background: var(--bg-card);
  }

  .task-header::before,
  .task-header::after {
    display: none;
  }
}

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  .task-header {
    transition: none;
  }

  .task-header::after {
    animation: none;
  }

  .task-header:hover {
    transform: none;
  }
}

/* Print styles */
@media print {
  .task-header {
    position: static;
    background: white !important;
    border-bottom: 1px solid black !important;
    padding: 0.5rem 0 !important;
    break-inside: avoid;
  }

  .task-header::before,
  .task-header::after {
    display: none !important;
  }
}

/* Loading state */
.task-header.loading {
  pointer-events: none;
  opacity: 0.7;
}

.task-header.loading::before {
  background: linear-gradient(90deg, var(--bg-tertiary) 25%, var(--bg-secondary) 50%, var(--bg-tertiary) 75%);
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite;
  opacity: 0.3;
}

@keyframes shimmer {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

/* Section divider for mobile */
@media (max-width: 768px) {
  .task-header-filter::after {
    content: "";
    position: absolute;
    bottom: -0.75rem;
    left: 0;
    right: 0;
    height: 1px;
    background: linear-gradient(90deg, transparent, var(--border-primary), transparent);
  }
}

/* Animation for new header */
@keyframes headerSlideIn {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.task-header.animate-in {
  animation: headerSlideIn 0.5s ease-out;
}

/* Sticky positioning option */
.task-header.sticky {
  position: sticky;
  top: 80px; /* Adjust based on your header height */
  z-index: 100;
  margin-bottom: 1rem;
}

.task-header.sticky::before {
  backdrop-filter: blur(20px);
  -webkit-backdrop-filter: blur(20px);
}

/* Compact filter and add task components for this layout */
.task-header .filter-container {
  padding: 0;
  margin: 0;
}

.task-header .filter-select {
  padding: 0.5rem 0.75rem;
  min-width: 100px;
  font-size: 0.875rem;
}

.task-header .filter-info {
  display: none; /* Hide the "Selected Filter" text in compact mode */
}

.task-header .add-task-container {
  margin-bottom: 0;
  gap: 0.5rem;
}

.task-header .add-task-input {
  padding: 0.5rem 0.75rem;
  font-size: 0.875rem;
}

.task-header .add-task-button {
  padding: 0.5rem 1rem;
  font-size: 0.875rem;
  min-height: auto;
  white-space: nowrap;
}

/* Mobile stacked layout adjustments */
@media (max-width: 480px) {
  .task-header .add-task-container {
    flex-direction: row;
  }

  .task-header .add-task-input {
    padding: 0.625rem 0.75rem;
  }

  .task-header .add-task-button {
    padding: 0.625rem 1rem;
  }
}
